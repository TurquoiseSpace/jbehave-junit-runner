<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.TurquoiseSpace</groupId>
	<artifactId>jbehave-junit-runner</artifactId>
	<version>3.0.0</version>
	<packaging>jar</packaging>

	<name>JBehave JUnit Runner</name>
	<description>Library designed to make JBehave stories &amp; scenarios show up in the JUnit view in IDEs supportting custom test runners</description>
	<url>https://github.com/TurquoiseSpace/jbehave-junit-runner</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/MIT</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Prakhar Makhija</name>
			<email>matcdac@gmail.com</email>
			<organization>Turquoise Space</organization>
			<organizationUrl>https://github.com/TurquoiseSpace</organizationUrl>
		</developer>
		<developer>
			<name>Prakhar Makhija</name>
			<email>prakhar.makhija@ge.com</email>
			<organization>General Electric</organization>
			<organizationUrl>https://www.ge.com/</organizationUrl>
		</developer>
	</developers>

	<contributors>
		<contributor>
			<name>Stephen Kurlow</name>
			<email>skurlow@gmail.com</email>
		</contributor>
		<contributor>
			<name>Andreas Ebbert-Karroum</name>
			<email>andreas.ebbert-karroum@codecentric.de</email>
			<organization>codecentric AG</organization>
		</contributor>
		<contributor>
			<name>Daniel Schneller</name>
			<email>daniel.schneller@codecentric.de</email>
			<organization>codecentric AG</organization>
		</contributor>
		<contributor>
			<name>Valery Yatsynovich</name>
			<email>valfirst@yandex.ru</email>
		</contributor>
	</contributors>

	<scm>
		<connection>scm:git:git://github.com/TurquoiseSpace/jbehave-junit-runner.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/TurquoiseSpace/jbehave-junit-runner.git</developerConnection>
		<url>https://github.com/TurquoiseSpace/jbehave-junit-runner</url>
		<tag>HEAD</tag>
	</scm>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<properties>
		<jdk.version>11</jdk.version>
		<jbehave.version>5.2.0</jbehave.version>
		<junit.version>5.10.1</junit.version>
		<mockito.version>5.7.0</mockito.version>
		<hamcrest.version>2.2</hamcrest.version>
		<apache.maven-compiler-plugin.version>3.11.0</apache.maven-compiler-plugin.version>
		<apache.maven-source-plugin.version>3.3.0</apache.maven-source-plugin.version>
		<apache.maven-javadoc-plugin.version>3.6.2</apache.maven-javadoc-plugin.version>
		<sonatype.plugins.nexus-staging-maven-plugin.version>1.6.13</sonatype.plugins.nexus-staging-maven-plugin.version>
		<apache.maven-release-plugin.version>3.0.1</apache.maven-release-plugin.version>
		<apache.maven-surefire-plugin.version>3.2.2</apache.maven-surefire-plugin.version>
		<apache.maven-gpg-plugin.version>3.1.0</apache.maven-gpg-plugin.version>
		<sonarsource.scanner.maven.sonar-maven-plugin.version>3.10.0.2594</sonarsource.scanner.maven.sonar-maven-plugin.version>
		<jacoco.jacoco-maven-plugin.version>0.8.11</jacoco.jacoco-maven-plugin.version>
		<eluder.coveralls-maven-plugin.version>4.3.0</eluder.coveralls-maven-plugin.version>
		<javax.xml.bind.jaxb-api.version>2.3.1</javax.xml.bind.jaxb-api.version>
		<jakarta.xml.bind-api.version>4.0.1</jakarta.xml.bind-api.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.organization>turquoise-space</sonar.organization>
		<sonar.projectKey>TurquoiseSpace_jbehave-junit-runner</sonar.projectKey>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.sources>src/main</sonar.sources>
		<sonar.tests>src/test</sonar.tests>
		<sonar.tests.inclusions>src/test/**</sonar.tests.inclusions>
		<sonar.exclusions>target/**</sonar.exclusions>
		<maven.test.skip>false</maven.test.skip>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.scm.exclusions.disabled>true</sonar.scm.exclusions.disabled>
	</properties>

	<build>
		<plugins>
			<plugin>
				<!-- Ensure we compile with the correct version of the JDK -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${apache.maven-compiler-plugin.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${apache.maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${apache.maven-gpg-plugin.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${apache.maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${sonatype.plugins.nexus-staging-maven-plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${apache.maven-release-plugin.version}</version>
				<configuration>
					<localCheckout>true</localCheckout>
					<pushChanges>false</pushChanges>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${apache.maven-surefire-plugin.version}</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>integration-test-successful-stories</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<includes>
								<include>**/story/ExampleScenarioJUnitStory.java</include>
								<include>**/story/FilteredOutScenariosNotStory.java</include>
								<include>**/story/LifecycleStepsStory.java</include>
								<include>**/story/ShowIgnoredScenariosAsIgnoredAndNotPassedStory.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>integration-test-failing-stories</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<testFailureIgnore>true</testFailureIgnore>
							<includes>
								<include>**/story/*.java</include>
							</includes>
							<excludes>
								<exclude>**/story/ExampleScenarioJUnitStory.java</exclude>
								<exclude>**/story/FilteredOutScenariosNotStory.java</exclude>
								<exclude>**/story/LifecycleStepsStory.java</exclude>
								<exclude>**/story/ShowIgnoredScenariosAsIgnoredAndNotPassedStory.java</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonarsource.scanner.maven.sonar-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.jacoco-maven-plugin.version}</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo
					runtime agent which is passed as VM argument when Maven the Surefire plugin
					is executed. pre-unit-test -->
					<execution>
						<id>prepare-agent</id>
						<phase>test-compile</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- Ensures that the code coverage report for
					unit tests is created after unit tests have been run. post-unit-test -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<formats>
								<format>XML</format>
							</formats>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<skip>${maven.test.skip}</skip>
					<destFile>${project.basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
					<dataFile>${project.basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
					<output>file</output>
					<append>true</append>
					<excludes>
						<exclude>${sonar.exclusions}</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>${eluder.coveralls-maven-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>${javax.xml.bind.jaxb-api.version}</version>
					</dependency>
					<dependency>
						<groupId>jakarta.xml.bind</groupId>
						<artifactId>jakarta.xml.bind-api</artifactId>
						<version>${jakarta.xml.bind-api.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-core</artifactId>
			<version>${jbehave.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>coverage</id>
		</profile>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>sign-artifacts</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>ci</id>
			<activation>
				<property>
					<name>env.CI</name>
					<value>true</value>
				</property>
			</activation>
		</profile>
	</profiles>

</project>
